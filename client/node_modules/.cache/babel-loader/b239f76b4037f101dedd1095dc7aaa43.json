{"ast":null,"code":"import _initializerDefineProperty from \"/Users/sariq/projects/us-dv/client/us-dv/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/sariq/projects/us-dv/client/us-dv/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/sariq/projects/us-dv/client/us-dv/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _temp;\n\nimport { observable, action, computed } from \"mobx\";\nimport configObj from '../../services/configService';\nimport ConfigStore from \"./configStore\";\nconst apis = {\n  applyApplication(data) {\n    console.log(data); //return ApiCaller.doPost('config/bot', null, data);\n  },\n\n  reigster(data) {\n    fetch(ConfigStore.configData.domain + 'api/users/', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"user\": data\n      })\n    }).then(response => response.json()).then(responseJson => {\n      if (responseJson.user) {\n        console.log(responseJson);\n      } else {}\n\n      return responseJson;\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n};\nlet registrationStore = (_class = (_temp = class registrationStore {\n  constructor() {\n    _initializerDefineProperty(this, \"registrationData\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"applicationData\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"userData\", _descriptor3, this);\n  }\n\n  sendApplication() {\n    apis.applyApplication(this.applicationData);\n  }\n\n  handleApplicantDataChange(attr, value) {\n    this.applicationData.applicantInfo[attr] = value;\n  }\n\n  handleDataChange(attr, value, obj) {\n    this.applicationData[obj][attr] = value;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"registrationData\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {\n      personalDetails: {},\n      paymentData: {}\n    };\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"applicationData\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {\n      applicantInfo: {},\n      spouseInfo: {},\n      childrenInfo: [],\n      addressContact: {}\n    };\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"userData\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"sendApplication\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"sendApplication\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"handleApplicantDataChange\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"handleApplicantDataChange\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"handleDataChange\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"handleDataChange\"), _class.prototype)), _class); //export default registrationStore;\n\nexport default new registrationStore();","map":{"version":3,"sources":["/Users/sariq/projects/us-dv/client/us-dv/src/stores/registrationStore.js"],"names":["observable","action","computed","configObj","ConfigStore","apis","applyApplication","data","console","log","reigster","fetch","configData","domain","method","headers","Accept","body","JSON","stringify","then","response","json","responseJson","user","catch","error","registrationStore","sendApplication","applicationData","handleApplicantDataChange","attr","value","applicantInfo","handleDataChange","obj","personalDetails","paymentData","spouseInfo","childrenInfo","addressContact"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,QAA7B,QAA4C,MAA5C;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAGA,MAAMC,IAAI,GAAG;AACTC,EAAAA,gBAAgB,CAACC,IAAD,EAAO;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADmB,CAEnB;AACH,GAJQ;;AAKTG,EAAAA,QAAQ,CAAEH,IAAF,EAAO;AACXI,IAAAA,KAAK,CAACP,WAAW,CAACQ,UAAZ,CAAuBC,MAAvB,GAAgC,YAAjC,EAA+C;AAChDC,MAAAA,MAAM,EAAE,MADwC;AAEhDC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFuC;AAMhDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB,gBAAQZ;AADW,OAAf;AAN0C,KAA/C,CAAL,CAUGa,IAVH,CAUSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAVtB,EAWGF,IAXH,CAWSG,YAAD,IAAkB;AACtB,UAAGA,YAAY,CAACC,IAAhB,EAAqB;AACnBhB,QAAAA,OAAO,CAACC,GAAR,CAAYc,YAAZ;AAED,OAHD,MAGK,CAEJ;;AACD,aAAOA,YAAP;AACD,KAnBH,EAoBGE,KApBH,CAoBUC,KAAD,IAAW;AAChBlB,MAAAA,OAAO,CAACkB,KAAR,CAAcA,KAAd;AACD,KAtBH;AAuBH;;AA7BQ,CAAb;IAgCMC,iB,sBAAN,MAAMA,iBAAN,CAAwB;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAYZC,EAAAA,eAAR,GAA2B;AACvBvB,IAAAA,IAAI,CAACC,gBAAL,CAAsB,KAAKuB,eAA3B;AACH;;AACOC,EAAAA,yBAAR,CAAkCC,IAAlC,EAAwCC,KAAxC,EAA+C;AAC3C,SAAKH,eAAL,CAAqBI,aAArB,CAAmCF,IAAnC,IAA2CC,KAA3C;AACH;;AACOE,EAAAA,gBAAR,CAAyBH,IAAzB,EAA+BC,KAA/B,EAAsCG,GAAtC,EAA2C;AACvC,SAAKN,eAAL,CAAqBM,GAArB,EAA0BJ,IAA1B,IAAkCC,KAAlC;AACH;;AApBmB,C,0FACnBhC,U;;;;;WAA4B;AACzBoC,MAAAA,eAAe,EAAC,EADS;AAEzBC,MAAAA,WAAW,EAAC;AAFa,K;;mFAI5BrC,U;;;;;WAA2B;AACxBiC,MAAAA,aAAa,EAAC,EADU;AAExBK,MAAAA,UAAU,EAAC,EAFa;AAGxBC,MAAAA,YAAY,EAAC,EAHW;AAIxBC,MAAAA,cAAc,EAAC;AAJS,K;;4EAM3BxC,U;;;;;WAAoB,I;;oEACpBC,M,sKAGAA,M,uKAGAA,M,uGAIL;;AACA,eAAe,IAAI0B,iBAAJ,EAAf","sourcesContent":["import { observable, action, computed} from \"mobx\";\nimport configObj from '../../services/configService'\nimport ConfigStore from \"./configStore\"\n\n\nconst apis = {\n    applyApplication(data) {\n        console.log(data);\n        //return ApiCaller.doPost('config/bot', null, data);\n    },\n    reigster (data){\n        fetch(ConfigStore.configData.domain + 'api/users/', {\n            method: 'POST',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              \"user\": data\n            }),\n          })\n          .then((response) => response.json())\n          .then((responseJson) => {\n            if(responseJson.user){\n              console.log(responseJson)\n            \n            }else{\n             \n            }        \n            return responseJson;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n    }\n}\n\nclass registrationStore {\n    @observable registrationData={\n        personalDetails:{},\n        paymentData:{}\n    };\n    @observable applicationData={\n        applicantInfo:{},\n        spouseInfo:{},\n        childrenInfo:[],\n        addressContact:{}\n    };\n    @observable userData=null;\n    @action sendApplication () {\n        apis.applyApplication(this.applicationData);\n    };\n    @action handleApplicantDataChange(attr, value) {\n        this.applicationData.applicantInfo[attr] = value;\n    }\n    @action handleDataChange(attr, value, obj) {\n        this.applicationData[obj][attr] = value;\n    }\n}\n//export default registrationStore;\nexport default new registrationStore();"]},"metadata":{},"sourceType":"module"}