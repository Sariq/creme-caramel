{"ast":null,"code":"import _initializerDefineProperty from \"/Users/sariq/projects/us-dv/client/us-dv/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/sariq/projects/us-dv/client/us-dv/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/sariq/projects/us-dv/client/us-dv/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _class, _descriptor, _temp;\n\nimport { observable, action, computed } from \"mobx\";\nimport ConfigStore from \"./configStore\";\nconst apis = {\n  login(data) {\n    return fetch(ConfigStore.configData.domain + 'api/users/login', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"user\": {\n          \"email\": \"sari.q34@gmail.com\",\n          \"password\": \"1298\"\n        }\n      })\n    }).then(response => response.json()).then(responseJson => {\n      if (responseJson.user) {\n        console.log(responseJson.user.userData);\n        this.userData = responseJson.user.userData;\n      } else {}\n\n      return responseJson;\n    }).catch(error => {\n      console.error(error);\n    });\n  },\n\n  logOut(data) {\n    fetch(ConfigStore.configData.domain + 'api/users/signOut/', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Token ' + data.user.token\n      },\n      body: JSON.stringify({\n        \"user\": data\n      })\n    }).then(response => response.json()).then(responseJson => {\n      console.log(responseJson);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n};\nlet AuthStore = (_dec = action.bound, (_class = (_temp = class AuthStore {\n  constructor() {\n    _initializerDefineProperty(this, \"authData\", _descriptor, this);\n  }\n\n  login() {\n    apis.login().then(data => this.userData = data.user.userData);\n  }\n\n  getUserDataLocal() {\n    this.authData = localStorage.getItem('authData');\n  }\n\n  setUserDataLocal(data) {\n    localStorage.setItem('authData', JSON.stringify(data));\n    this.authData = data;\n    console.log(this.authData);\n  }\n\n  initLogin() {\n    this.authData = JSON.parse(localStorage.getItem('authData'));\n  }\n\n  logOut() {\n    apis.logOut(this.authData);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"authData\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"login\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"login\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getUserDataLocal\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getUserDataLocal\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setUserDataLocal\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setUserDataLocal\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"initLogin\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"initLogin\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"logOut\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"logOut\"), _class.prototype)), _class));\nexport default new AuthStore();","map":{"version":3,"sources":["/Users/sariq/projects/us-dv/client/us-dv/src/stores/AuthStore.js"],"names":["observable","action","computed","ConfigStore","apis","login","data","fetch","configData","domain","method","headers","Accept","body","JSON","stringify","then","response","json","responseJson","user","console","log","userData","catch","error","logOut","token","AuthStore","bound","getUserDataLocal","authData","localStorage","getItem","setUserDataLocal","setItem","initLogin","parse"],"mappings":"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","sourcesContent":["import { observable, action, computed} from \"mobx\";\nimport ConfigStore from \"./configStore\"\n\nconst apis = {\n    login(data){\n      return fetch(ConfigStore.configData.domain + 'api/users/login', {\n            method: 'POST',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              \"user\": {\n                \"email\": \"sari.q34@gmail.com\",\n                \"password\": \"1298\"\n              }\n            }),\n          })\n          .then((response) => response.json())\n          .then((responseJson) => {\n            if(responseJson.user){\n              console.log(responseJson.user.userData)\n              this.userData = responseJson.user.userData;\n            }else{\n            }        \n            return responseJson;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n    },\n    logOut(data){\n        fetch(ConfigStore.configData.domain + 'api/users/signOut/', {\n            method: 'POST',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json',\n              'Authorization': 'Token ' + data.user.token\n\n            },\n            body: JSON.stringify({\n              \"user\": data\n            }),\n          })\n          .then((response) => response.json())\n          .then((responseJson) => {\n            console.log(responseJson)\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n    }\n}\nclass AuthStore {\n    @observable authData=null;\n\n    @action login () {\n        apis.login().then((data)=>this.userData = data.user.userData);\n    };\n    @action getUserDataLocal () {\n        this.authData = localStorage.getItem('authData');\n    };\n    @action setUserDataLocal (data) {\n        localStorage.setItem('authData', JSON.stringify(data));\n        this.authData = data;\n        console.log(this.authData)\n    };\n    @action initLogin () {\n        this.authData = JSON.parse(localStorage.getItem('authData'));\n    };\n    @action.bound logOut(){\n        apis.logOut(this.authData);\n    }\n}\nexport default new AuthStore();"]},"metadata":{},"sourceType":"module"}