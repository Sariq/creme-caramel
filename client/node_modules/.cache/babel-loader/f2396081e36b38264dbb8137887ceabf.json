{"ast":null,"code":"import _applyDecoratedDescriptor from \"/Users/sariq/projects/us-dv/client/us-dv/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class;\n\nimport { observable } from \"mobx\";\nconst apis = {\n  login(data) {\n    fetch(configObj.domain + 'api/users/login/', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"user\": {\n          \"email\": \"sari.q34@gmail.com\",\n          \"password\": \"1q2w3e\"\n        }\n      })\n    }).then(response => response.json()).then(responseJson => {\n      if (responseJson.user) {\n        console.log(responseJson.user);\n      } else {}\n\n      return responseJson;\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n};\nlet ConfigStore = (_class = class ConfigStore {\n  login() {\n    apis.login();\n  }\n\n}, (_applyDecoratedDescriptor(_class.prototype, \"login\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"login\"), _class.prototype)), _class);\nexport default new ConfigStore();","map":{"version":3,"sources":["/Users/sariq/projects/us-dv/client/us-dv/src/stores/AuthStore.js"],"names":["observable","apis","login","data","fetch","configObj","domain","method","headers","Accept","body","JSON","stringify","then","response","json","responseJson","user","console","log","catch","error","ConfigStore","action"],"mappings":";;;;AAAA,SAASA,UAAT,QAA0B,MAA1B;AACA,MAAMC,IAAI,GAAG;AACTC,EAAAA,KAAK,CAACC,IAAD,EAAM;AACPC,IAAAA,KAAK,CAACC,SAAS,CAACC,MAAV,GAAmB,kBAApB,EAAwC;AACzCC,MAAAA,MAAM,EAAE,MADiC;AAEzCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFgC;AAMzCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB,gBAAQ;AACN,mBAAS,oBADH;AAEN,sBAAY;AAFN;AADW,OAAf;AANmC,KAAxC,CAAL,CAaGC,IAbH,CAaSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAbtB,EAcGF,IAdH,CAcSG,YAAD,IAAkB;AACtB,UAAGA,YAAY,CAACC,IAAhB,EAAqB;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAYH,YAAY,CAACC,IAAzB;AAED,OAHD,MAGK,CACJ;;AACD,aAAOD,YAAP;AACD,KArBH,EAsBGI,KAtBH,CAsBUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACD,KAxBH;AAyBH;;AA3BQ,CAAb;IA6BMC,W,aAAN,MAAMA,WAAN,CAAkB;AACNpB,EAAAA,KAAR,GAAiB;AACbD,IAAAA,IAAI,CAACC,KAAL;AACH;;AAHa,C,yDACbqB,M;AAIL,eAAe,IAAID,WAAJ,EAAf","sourcesContent":["import { observable} from \"mobx\";\nconst apis = {\n    login(data){\n        fetch(configObj.domain + 'api/users/login/', {\n            method: 'POST',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              \"user\": {\n                \"email\": \"sari.q34@gmail.com\",\n                \"password\": \"1q2w3e\"\n              }\n            }),\n          })\n          .then((response) => response.json())\n          .then((responseJson) => {\n            if(responseJson.user){\n              console.log(responseJson.user)\n             \n            }else{\n            }        \n            return responseJson;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n    }\n}\nclass ConfigStore {\n    @action login () {\n        apis.login();\n    };\n}\nexport default new ConfigStore();"]},"metadata":{},"sourceType":"module"}