{"ast":null,"code":"import _initializerDefineProperty from \"/Users/sariq/projects/us-dv/client/us-dv/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/sariq/projects/us-dv/client/us-dv/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/sariq/projects/us-dv/client/us-dv/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _temp;\n\nimport { observable, action, computed } from \"mobx\";\nimport ConfigStore from \"./configStore\";\nconst apis = {\n  login(data) {\n    return fetch(ConfigStore.configData.domain + 'api/users/login/', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"user\": {\n          \"email\": data.userName,\n          \"password\": data.password\n        }\n      })\n    }).then(response => response.json()).then(responseJson => {\n      if (responseJson.user) {\n        console.log(responseJson.user);\n      } else {}\n\n      return responseJson;\n    }).catch(error => {\n      console.error(error);\n    });\n  },\n\n  logOut(data) {\n    return fetch(ConfigStore.configData.domain + 'api/users/signOut/', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Token ' + data.token\n      },\n      body: JSON.stringify({\n        \"user\": data\n      })\n    }).then(response => response.json()).then(responseJson => {\n      console.log(responseJson);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n};\nlet AuthStore = (_class = (_temp = class AuthStore {\n  constructor() {\n    _initializerDefineProperty(this, \"authData\", _descriptor, this);\n  }\n\n  login(data) {\n    return apis.login(data).then(data => this.authData = data);\n  }\n\n  getUserDataLocal() {\n    this.authData = localStorage.getItem('authData');\n  }\n\n  setUserDataLocal(data) {\n    localStorage.setItem('authData', JSON.stringify(data));\n    this.authData = data;\n    console.log(this.authData);\n  }\n\n  initLogin() {\n    this.authData = JSON.parse(localStorage.getItem('authData'));\n  }\n\n  logOut() {\n    return apis.logOut(this.authData.user).then(() => {\n      localStorage.setItem('authData', null);\n      this.authData = null;\n    });\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"authData\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"login\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"login\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getUserDataLocal\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getUserDataLocal\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setUserDataLocal\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setUserDataLocal\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"initLogin\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"initLogin\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"logOut\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"logOut\"), _class.prototype)), _class);\nexport default new AuthStore();","map":{"version":3,"sources":["/Users/sariq/projects/us-dv/client/us-dv/src/stores/AuthStore.js"],"names":["observable","action","computed","ConfigStore","apis","login","data","fetch","configData","domain","method","headers","Accept","body","JSON","stringify","userName","password","then","response","json","responseJson","user","console","log","catch","error","logOut","token","AuthStore","authData","getUserDataLocal","localStorage","getItem","setUserDataLocal","setItem","initLogin","parse"],"mappings":"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","sourcesContent":["import { observable, action, computed} from \"mobx\";\nimport ConfigStore from \"./configStore\"\n\nconst apis = {\n    login(data){\n      return fetch(ConfigStore.configData.domain + 'api/users/login/', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          \"user\": {\n            \"email\": data.userName,\n            \"password\": data.password\n          }\n        }),\n      })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        if(responseJson.user){\n          console.log(responseJson.user)\n          \n        }else{\n         \n        }        \n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n    },\n    logOut(data){\n        return fetch(ConfigStore.configData.domain + 'api/users/signOut/', {\n            method: 'POST',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json',\n              'Authorization': 'Token ' + data.token\n\n            },\n            body: JSON.stringify({\n              \"user\": data\n            }),\n          })\n          .then((response) => response.json())\n          .then((responseJson) => {\n            console.log(responseJson)\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n    }\n}\nclass AuthStore {\n    @observable authData=null;\n\n    @action login (data) {\n        return apis.login(data).then((data)=>this.authData = data);\n    };\n    @action getUserDataLocal () {\n        this.authData = localStorage.getItem('authData');\n    };\n    @action setUserDataLocal (data) {\n        localStorage.setItem('authData', JSON.stringify(data));\n        this.authData = data;\n        console.log(this.authData)\n    };\n    @action initLogin () {\n        this.authData = JSON.parse(localStorage.getItem('authData'));\n    };\n    @action logOut () {\n        return apis.logOut(this.authData.user).then(()=>{\n            localStorage.setItem('authData',null);\n            this.authData = null;\n        });\n    }\n}\nexport default new AuthStore();\n\n"]},"metadata":{},"sourceType":"module"}